apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: nodejs-prj-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: triggers.tekton.dev/v1beta1
    kind: TriggerBinding
    metadata:
      creationTimestamp: null
      name: nodejs-prj-git-event
    spec: {}
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: nodejs-prj
      name: nodejs-prj
    spec:
      rules:
        - host: nodejs-prj.com
          http:
            paths:
              - backend:
                  service:
                    name: el-nodejs-prj-git-repo
                    port:
                      name: port-8080
                path: /el-nodejs-prj-git-repo
                pathType: Prefix
    status:
      loadBalancer: {}
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      name: nodejs-prj-tekton-triggers-admin
    rules:
      - apiGroups:
          - triggers.tekton.dev
        resources:
          - eventlisteners
          - triggerbindings
          - triggertemplates
        verbs:
          - get
      - apiGroups:
          - tekton.dev
        resources:
          - pipelineruns
        verbs:
          - create
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      name: nodejs-prj-tekton-triggers-admin
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      name: nodejs-prj-tekton-triggers-admin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: nodejs-prj-tekton-triggers-admin
    subjects:
      - kind: ServiceAccount
        name: nodejs-prj-tekton-triggers-admin
  - apiVersion: v1
    data:
      VCAP_APPLICATION: eyJhcHBsaWNhdGlvbl9pZCI6ImlkIiwiYXBwbGljYXRpb25fbmFtZSI6ImNmbm9kZWpzYXBwIiwiYXBwbGljYXRpb25fdXJpcyI6WyJhcHAtdXJsIl0sImFwcGxpY2F0aW9uX3ZlcnNpb24iOiJhcHAtdmVyc2lvbiIsImNmX2FwaSI6Imh0dHBzOi8vYXBpLnJlZ2lvbi5jZi5jb20iLCJsaW1pdHMiOnsiZGlzayI6MTAyNCwiZmRzIjoxNjM4NCwibWVtIjoyNTZ9LCJuYW1lIjoiY2Zub2RlanNhcHAiLCJvcmdhbml6YXRpb25faWQiOiJvcmctaWQiLCJvcmdhbml6YXRpb25fbmFtZSI6Im9yZy1uYW1lIiwicHJvY2Vzc19pZCI6ImlkIiwicHJvY2Vzc190eXBlIjoid2ViIiwic3BhY2VfaWQiOiJzcGFjZS1pZCIsInNwYWNlX25hbWUiOiJkZXYiLCJ1cmlzIjpbImFwcC11cmwiXSwidXNlcnMiOm51bGwsInZlcnNpb24iOiJhcHAtdmVyc2lvbiJ9
      VCAP_SERVICES: e30=
    kind: Secret
    metadata:
      creationTimestamp: null
      name: cfnodejsapp-vcapasenv
    type: Opaque
  - apiVersion: tekton.dev/v1beta1
    kind: Pipeline
    metadata:
      creationTimestamp: null
      name: nodejs-prj-clone-build-push
    spec:
      params:
        - description: registry-domain/namespace where the output image should be pushed.
          name: image-registry-url
          type: string
      tasks:
        - name: clone-1
          params:
            - name: url
              value: '<TODO: insert git repo url>'
            - name: revision
              value: main
            - name: deleteExisting
              value: "true"
          taskRef:
            name: git-clone
          workspaces:
            - name: output
              workspace: nodejs-prj-shared-data
            - name: ssh-directory
              workspace: git-ssh-credentials
        - name: build-push-1
          params:
            - name: IMAGE
              value: $(params.image-registry-url)/cfnodejsapp
            - name: DOCKERFILE
              value: '<TODO: fill this prefix starting from the root of the git repo>/pcf-sample-code-main/pcf-sample-code-main/cloud-foundry/cfnodejsapp/Dockerfile'
            - name: CONTEXT
              value: '<TODO: fill this prefix starting from the root of the git repo>/pcf-sample-code-main/pcf-sample-code-main/cloud-foundry/cfnodejsapp'
          runAfter:
            - clone-1
          taskRef:
            name: kaniko
          workspaces:
            - name: source
              workspace: nodejs-prj-shared-data
            - name: dockerconfig
              workspace: registry-credentials
      workspaces:
        - description: This workspace will receive the cloned git repo and be passed to the kaniko task for building the image.
          name: nodejs-prj-shared-data
        - description: This workspace provides the credentials (Docker config.json) for pushing images to the registry. See https://hub.tekton.dev/tekton/task/kaniko
          name: registry-credentials
        - description: This workspace provides the credentials (ssh private key) for cloning the git repo. See https://hub.tekton.dev/tekton/task/git-clone
          name: git-ssh-credentials
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      name: nodejs-prj-clone-push
    secrets:
      - name: nodejs-prj-image-registry
  - apiVersion: triggers.tekton.dev/v1beta1
    kind: EventListener
    metadata:
      creationTimestamp: null
      name: nodejs-prj-git-repo
    spec:
      namespaceSelector: {}
      resources: {}
      serviceAccountName: nodejs-prj-tekton-triggers-admin
      triggers:
        - bindings:
            - ref: nodejs-prj-git-event
          template:
            ref: nodejs-prj-run-clone-build-push
    status:
      configuration:
        generatedName: ""
  - apiVersion: v1
    data:
      .dockerconfigjson: PFRPRE86IGluc2VydCB5b3VyIGRvY2tlciBjb25maWcganNvbj4=
    kind: Secret
    metadata:
      annotations:
        tekton.dev/docker-0: ""
      creationTimestamp: null
      name: nodejs-prj-image-registry
    type: kubernetes.io/dockerconfigjson
  - apiVersion: triggers.tekton.dev/v1beta1
    kind: TriggerTemplate
    metadata:
      creationTimestamp: null
      name: nodejs-prj-run-clone-build-push
    spec:
      resourcetemplates:
        - apiVersion: tekton.dev/v1beta1
          kind: PipelineRun
          metadata:
            creationTimestamp: null
            name: nodejs-prj-clone-build-push-$(uid)
          spec:
            params:
              - name: image-registry-url
                value: quay.io/nodejs-prj
            pipelineRef:
              name: nodejs-prj-clone-build-push
            serviceAccountName: nodejs-prj-clone-push
            workspaces:
              - name: nodejs-prj-shared-data
                volumeClaimTemplate:
                  metadata:
                    creationTimestamp: null
                  spec:
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 1Gi
                    storageClassName: default
                  status: {}
          status: {}
    status: {}
parameters: []
